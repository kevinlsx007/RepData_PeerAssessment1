install.packages("knitr")
install.packages("kernlab")
setwd("C:/Users/Wanghuan/RepData_PeerAssessment1")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
We first set the global options to make sure that the code can be evaluated by seeting echo = TRUE.
```{r setoptions, echo=TRUE}
library(knitr)
# Set the global options
opts_chunk$set(echo=TRUE)
```
Then we unzip, load, and process the data.
```{r processdata}
# Unzip and load the data
unzip("activity.zip")
act <- read.csv("activity.csv")
head(act)
```
## What is mean total number of steps taken per day?
This part of the assignment consists of three steps.
1. The total number of steps taken per day are summarized in a table.
```{r totalsteps}
library(plyr)
# Remove the missing values in the dataset
actnarm <- act[complete.cases(act),]
# Summarize the total number of steps taken per day
totalsteps <- ddply(actnarm, .(date), summarize, total=sum(steps))
print(totalsteps)
```
2. A histogram of the total number of steps taken each day is shown.
```{r histogram}
hist(totalsteps$total,main="Histogram of total steps taken each day",xlab="Total Steps")
```
3. Calculate and report the mean and median of the total number of steps taken per day.
```{r, meanmedian}
# Calculate the mean and median
meansteps <- as.integer(round(sum(totalsteps$total)/length(totalsteps$total)))
mediansteps <- median(totalsteps$total)
```
The mean number of steps taken per day is `r meansteps` and the median number of steps taken per day is `r mediansteps`.
## What is the average daily activity pattern?
This part of the assignment consists of two steps.
1. We first calculate the average number of steps taken across all days using ddply() function. Secondly, we convert the time interval to "time". At last, we make the time series plot.
```{r, dailypattern}
# Calculate the average number of steps taken across all days
daily <- ddply(actnarm, .(interval), summarize, average=mean(steps))
# Add leading "0" the 5-minute intnerval and convert to POSIXlt
library(stringr)
daily$interval <- str_pad(daily$interval,4,pad="0")
daily$interval <-strptime(daily$interval,"%H%M")
# Make the time series plot
plot(daily$interval,daily$average,type="l",xlab="Time",ylab="Average number of steps")
```
2. To find out the 5-minute interval with maximum number of steps, we need to order the dataset by average steps.
```{r order}
# Reorder the dataset and find out the 5-minute interval with maximum number of # steps
orderdf <- daily[order(daily$average,decreasing=TRUE),]
orderdf$interval <- gsub("2015-05-11 ","",orderdf$interval)
maxtime <- orderdf[1,1]
```
Therefore, the 5-minute interval with maximum number of steps is `r maxtime`.
## Imputing missing values
1. To calculate the total number of rows with NAs, we use complete.cases() function.
```{r}
# Count the total number of rows with missing values
nacount <- sum(!complete.cases(act))
```
Therefore, the total number of missing values in the dataset is `r nacount`.
2. To fill in all of the missing values, we decide to use the mean for that 5-minute interval.
```{r}
# Extract the rows with missing values
actna <- act[!complete.cases(act),]
# Fill in all of the missing values using the mean for that 5-minute interval
actna$steps <- rep(daily$average, length(unique(actna$date)))
head(actna)
```
3. Create the new dataset with the missing data filled in.
```{r fillna}
# Combine the two sets of data
act.new <- rbind(actna,actnarm)
# Change the order of the dataset
act.new <- act.new[order(act.new$date,act.new$interval),]
```
4. Summarize the total number of steps taken each day. The histogram of is shown as below.
```{r, totalnew}
total.new <- ddply(act.new, .(date), summarize, total=sum(steps))
mean.new <- as.integer(round(sum(total.new$total)/length(total.new$total)))
median.new <- as.integer(round(median(total.new$total)))
hist(total.new$total,main="Histogram of total steps taken each day",xlab="Total Steps")
```
The mean number of steps taken per day is `r mean.new` and the median number of steps taken per day is `r median.new`. The mean value does not differ from the estimate from the first part of the assignment. However, imputing missing data changes the median value (from 10765 to 10766) slightly.
## Are there differences in activity patterns between weekdays and weekends?
1. We combine date and interval, convert to POSIXlt time series, extract the weekdays information, and add the labels.
```{r, weekdays}
library(stringr)
act.new$interval <- str_pad(act.new$interval,4,pad="0")
act.new$time <- paste(act.new$date,act.new$interval)
act.new$time <-strptime(act.new$time,"%Y-%m-%d %H%M")
act.new$day <- weekdays(act.new$time)
```
head(act.new)
str(act.new)
weekdays(act.new$time)
Sys.setenv(LANG = "en")
weekdays(act.new$time)
weekdays(act.new$time)
